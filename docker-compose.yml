services:
  mongodb:
    image: mongo:6.0
    container_name: flowbitai-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: flowbitai
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/mongodb-keyfile:/data/keyfile:ro
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/data/keyfile"]
    networks:
      - flowbitai-network

  mongodb-init:
    image: mongo:6.0
    container_name: flowbitai-mongodb-init
    depends_on:
      - mongodb
    volumes:
      - ./mongodb/init-replica.sh:/init-replica.sh:ro
    command: ["bash", "/init-replica.sh"]
    networks:
      - flowbitai-network

  api:
    build: .
    container_name: flowbitai-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${PORT}
      NODE_ENV: ${NODE_ENV}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      API_URL: ${API_URL}
    volumes:
      - .:/app
      - /app/node_modules
    command: npx tsx api/index.ts
    depends_on:
      - mongodb
    networks:
      - flowbitai-network

  n8n:
    image: n8nio/n8n
    container_name: flowbitai-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      N8N_USER_MANAGEMENT_DISABLED: ${N8N_USER_MANAGEMENT_DISABLED}
      N8N_DIAGNOSTICS_ENABLED: ${N8N_DIAGNOSTICS_ENABLED}
      N8N_VERSION_NOTIFICATIONS_ENABLED: ${N8N_VERSION_NOTIFICATIONS_ENABLED}
      N8N_TEMPLATES_ENABLED: ${N8N_TEMPLATES_ENABLED}
      WEBHOOK_URL: ${WEBHOOK_URL}
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
      N8N_BINARY_DATA_TTL: 1440
      N8N_BASIC_AUTH_ACTIVE: false
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - flowbitai-network

  n8n-init:
    image: curlimages/curl:latest
    container_name: flowbitai-n8n-init
    depends_on:
      - n8n
    volumes:
      - ./n8n/init-workflow.sh:/init-workflow.sh:ro
      - ./n8n/n8n-workflow.json:/workflows/n8n-workflow.json:ro
    command: ["sh", "/init-workflow.sh"]
    networks:
      - flowbitai-network

  react-shell:
    build:
      context: ./react-shell
    container_name: flowbitai-react-shell
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      REACT_APP_API_URL: ${API_URL}
    volumes:
      - ./react-shell:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - api
    networks:
      - flowbitai-network

  support-app:
    build:
      context: ./support-app
    container_name: flowbitai-support-app
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      REACT_APP_API_URL: ${API_URL}
    volumes:
      - ./support-app:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - api
    networks:
      - flowbitai-network

volumes:
  mongodb_data:
  n8n_data:

networks:
  flowbitai-network:
    driver: bridge
